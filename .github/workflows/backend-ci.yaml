name: Backend Continuous Integration

on:
  pull_request:
    branches:
      - main
    # paths:
    #   - 'starter/backend/**'
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10.14'

      - name: Install pipenv
        run: pip install pipenv

      - name: Cache pipenv
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('starter/backend/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        working-directory: ./starter/backend
        run: pipenv install --dev

      - name: Run lint
        working-directory: ./starter/backend
        run: pipenv run lint

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.10.14'

      - name: Install pipenv
        run: pip install pipenv

      - name: Cache pipenv
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('starter/backend/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        working-directory: ./starter/backend
        run: pipenv install --dev

      - name: Run tests
        working-directory: ./starter/backend
        run: pipenv run test

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies
        working-directory: ./starter/backend
        run: pipenv install

      - name: Build Docker image
        working-directory: ./starter/backend
        run: docker build -t movie-picture-backend .
